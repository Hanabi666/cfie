#include <vector>
#include <iostream>

using namespace std;

template <typename T>
T mCross_product3(const T& a, const T& b){
    try
    {
        return T{a[1]*b[2]-a[2]*b[1], a[2]*b[0]-a[0]*b[2], a[0]*b[1]-a[1]*b[0]};
    }
    catch(const std::exception& e)
    {
        std::cerr << "矢量积输入参数错误" << '\n';
        std::cerr << e.what() << '\n';
    }
    return *(T*)0;
}

vector<vector<float>> getGaussCoff(int n)
{
    vector<vector<float>> coff;
    switch (n)
    {
    case 1:
        coff.push_back({1.0, 1.0/3, 1.0/3, 1.0/3});
        break;
    case 3:
        coff.push_back({1.0/3, 2.0/3, 1.0/3, 1.0/3});
        coff.push_back({1.0/3, 1.0/3, 2.0/3, 1.0/3});
        coff.push_back({1.0/3, 1.0/3, 1.0/3, 2.0/3});
        break;
    case 4:
        coff.push_back({-0.5635, 1.0/3, 1.0/3, 1.0/3});
        coff.push_back({0.520833333333, 0.6, 0.2, 0.2});
        coff.push_back({0.520833333333, 0.2, 0.6, 0.2});
        coff.push_back({0.520833333333, 0.2, 0.2, 0.6});
        break;
    case 6:
        coff.push_back({0.223381589678, 0.108103018168, 0.445948490915, 0.445948490915});
        coff.push_back({0.223381589678, 0.445948490915, 0.108103018168, 0.445948490915});
        coff.push_back({0.223381589678, 0.445948490915, 0.445948490915, 0.108103018168});
        coff.push_back({0.109951743655, 0.816847572980, 0.091576213509, 0.091576213509});
        coff.push_back({0.109951743655, 0.091576213509, 0.816847572980, 0.091576213509});
        coff.push_back({0.109951743655, 0.091576213509, 0.091576213509, 0.816847572980});
        break;
    case 7:
        coff.push_back({0.2250, 1.0/3, 1.0/3, 1.0/3});
        coff.push_back({0.132394152788, 0.059715871789, 0.470142064105, 0.470142064105});
        coff.push_back({0.132394152788, 0.470142064105, 0.059715871789, 0.470142064105});
        coff.push_back({0.132394152788, 0.470142064105, 0.470142064105, 0.059715871789});
        coff.push_back({0.125939180544, 0.797426985353, 0.101286507323, 0.101286507323});
        coff.push_back({0.125939180544, 0.101286507323, 0.797426985353, 0.101286507323});
        coff.push_back({0.125939180544, 0.101286507323, 0.101286507323, 0.797426985353});
        break;
    case 12:
        coff.push_back({0.116786275726, 0.501426509658, 0.249286745170, 0.249286745170});
        coff.push_back({0.116786275726, 0.249286745170, 0.501426509658, 0.249286745170});
        coff.push_back({0.116786275726, 0.249286745170, 0.249286745170, 0.501426509658});
        coff.push_back({0.050844906370, 0.873821971016, 0.063089014491, 0.063089014491});
        coff.push_back({0.050844906370, 0.063089014491, 0.873821971016, 0.063089014491});
        coff.push_back({0.050844906370, 0.063089014491, 0.063089014491, 0.873821971016});
        coff.push_back({0.082851075618, 0.053145049844, 0.310352451033, 0.636502499121});
        coff.push_back({0.082851075618, 0.053145049844, 0.636502499121, 0.310352451033});
        coff.push_back({0.082851075618, 0.310352451033, 0.053145049844, 0.636502499121});
        coff.push_back({0.082851075618, 0.310352451033, 0.636502499121, 0.053145049844});
        coff.push_back({0.082851075618, 0.636502499121, 0.310352451033, 0.053145049844});
        coff.push_back({0.082851075618, 0.636502499121, 0.053145049844, 0.310352451033});
        break;
    default:
        std::cerr << "高斯积分点设置错误" << '\n';
        break;
    }
    return coff;
}
